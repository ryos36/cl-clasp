0) #のばぐ
#>PTEXT :P
logiFMC-FPD-II は FPD-Link II のチャネルを
最大４つ使用可能である FMC ドータカードで、
#the-Xilinx
の評価プラットフォームに最適です。
#the-Xilinx

#the-Spartan-6
を搭載した SP605 評価キットでの動作実績があります。
PTEXT

のように連続した # はなぜか空行を開ける必要がある。

#the-Xilinx
#the-Spartan-6

と続けると２行目がうまく評価されない
のを
        (if (not (char= #\# curr))
	            (incf count))
とダサく対応

1) HTTP ヘッダのコントロール
	post-func などに HTTP のヘッダに追加したい情報書いて、あれば
	ついかするようにする。
	Lcation というヘッダを追加すれば
	thnak-you などのスタティックなページに飛ばすことができる。

1.5) with-sharp-html-macro
	-> with-sharp->-macro に変更された
(with-sharp-html-macro
  (setf who-desc (asp:load-html-as-who file-name)))
みたいなのをつくりたい。
今は
(asp:use-sharp-html-macro)
(setf who-desc (asp:load-html-as-who file-name))
とする必要あり。


2) :init 時の変数評価
最初に :init のときに何も h-table にない。
form で来てもいないのでなにもない。
	=> 前段に form.html をつくる
           それでも直接呼ばれた時の対応が必要

:init のコンテンツを評価しようとして、最後まで解決できずにエラー。
(init h-table) という関数を作って対応。

関数で対応できることが分かった。 現在は (init) で実行
初期化変数を決める必要がある。-> ルール/自動化必要。
	pre -> status が無ければ追加
	post-> 各変数が無ければ追加

3) 評価したときにエラーになった時の処理
	-> デバッグがしにくい
	-> 呼び出す側で handler-case をつかってくれ

----------- Bug
sharp-html
	なぜか #<<>># とつづけないとエラーになる。
	JavaScript の "  " をちゃんと解析できない。

make-context
	((:table ))... としても中身がない。(table という属性名は関係ない)
	仕様は (:table ...) とすることを要求している（はず）
		() がひとつ多かった、、、
	((:div) (:table ...)) と一個かませると中身ができる。
	ただしなぜか <div> <table> ... </table> </div> となる。
	挙動がおかしいがそれ以外はうまくつかえるので 
	Copy & Paste でしのげる。

